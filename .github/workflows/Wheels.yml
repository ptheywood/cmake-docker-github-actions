# Compile project on Ubuntu
name: Wheels

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  manylinux2014:
    runs-on: ubuntu-20.04
    container:
      # manylinux2014 ships with GCC 10, and is viable. manylinux 2010 has gcc 8.3, so it would probably work but is about to be EOL. manylinux_2_24 has gcc 6 so is not viable.
      image: quay.io/pypa/manylinux2014_x86_64


    strategy:
      fail-fast: false
      # explicit include-based build matrix, of known valid options.
      # Greatly reduced compared to other CI due to limitations of manylinux.
      matrix:
        include:
          - python: "3.6"
          - python: "3.7"
          - python: "3.8"
          - python: "3.9"
    env:
      build_dir: "build"
      config: "Release"
      build_tests: "ON"
      build_swig_python: "ON"

    steps:
    - uses: actions/checkout@v2

    - name: Install CUDA
      run: echo "@todo"

    - name: Configure cmake
      run: cmake . -B ${{ env.build_dir }} -DCMAKE_BUILD_TYPE=${{ env.config }} -DBUILD_TESTS=${{ env.build_tests }} -DCMAKE_WARN_DEPRECATED=OFF -DBUILD_SWIG_PYTHON=${{ env.build_swig_python }} -DPYTHON3_EXACT_VERSION=${{ matrix.python }}

    - name: Build Wheel
      if: ${{ env.build_swig_python == 'ON' }}
      working-directory: ${{ env.build_dir }}
      run: cmake --build . --target pycdga --verbose -j `nproc`

    - name: auditwheel show
      working-directory: ${{ env.build_dir }}
      run: auditwheel show lib/${{ env.config }}/python/dist/*whl

    - name: auditwheel repair
      working-directory: ${{ env.build_dir }}
      run: auditwheel repair lib/${{ env.config }}/python/dist/*whl -w wheelhouse

    - name: Upload Wheel Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: wheelhouse
        path: ${{ env.build_dir }}/wheelhouse/*.whl
        if-no-files-found: error
        retention-days: 7
