# Dumb ci job to experiment with more consise matrices, than fully explicit include only.
name: matrix-testing

# Run on branch push events (i.e. not tag pushes) and on pull requests
on:
  push:
    branches:
      - '**'
    paths:
      - "**"
      - "!.github/**"
      - ".github/workflows/matrix-testing.yml"
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.cudacxx.os }}
    # container:
    #   image: quay.io/pypa/manylinux2014_x86_64
    strategy:
      fail-fast: false

      # Matrix needs to specify: 
      # + OS?
      # + Container?
      # + CUDA version + cuda_arch as a pair, + host compiler (gcc / msvc version.)
      # + python version
      # + If vis is on/off. This might require explicit include? 
      # + Build config and SEATBELTS.        

      matrix:
        cudacxx:
          - name: "CUDA 11.2"
            cuda: "11.2"
            cuda_arch: "52 60"
            cxx: gcc-9
            os: ubuntu-20.04
          - name: "CUDA 10.0"
            cuda: "10.0"
            cuda_arch: "35"
            cxx: gcc-7
            os: ubuntu-18.04
        config:
          - name: "Release"
            config: "Release"
            SEATBELTS: "ON"
          # - name: "SEATBELTS=OFF"
          #   config: "Release"
          #   SEATBELTS: "OFF"
          - name: "Debug"
            config: "Debug"
            SEATBELTS: "OFF"
        python: 
          - "3.6"
          - "3.8"
        VISUALISATION: 
          - "ON"
          - "OFF"

    # Name the build based on matrix/env options (but simplified?)
    name: build (${{ matrix.cudacxx.name }} ${{ matrix.config.name }} ${{matrix.python}} ${{ matrix.VISUALISATION}})

    # Explicitly define env bits, AND promote matrix components to the env, for more portable steps between jobs.
    env:
      BUILD_DIR: "build"
      BUILD_TESTS: "OFF"
      BUILD_SWIG_PYTHON: "ON"

      # Port matrix options to environment, for more portability.
      cuda: ${{ matrix.cudacxx.cuda }}
      cuda_arch: ${{ matrix.cudacxx.cuda_arch }}
      cxx: ${{ matrix.cudacxx.cxx }}
      CONFIG: ${{ matrix.config.config }}
      SEATBELTS: ${{ matrix.config.SEATBELTS }}
      python: ${{ matrix.python}}
      VISUALISATION: ${{ matrix.VISUALISATION }}






    steps:
    - uses: actions/checkout@v2

    - name: py select cuda_arch
      shell: python
      run: |
        cuda = "${{ matrix.cuda }}"
        x = {"11.2": "60"}
        arch = x[cuda] if cuda in x else "35"
        print("arch {:} {:}".format(cuda, arch)) 

   
    - name: Output job.
      shell: bash
      run: |
        echo "${{ toJSON(job) }}"

    - name: Output steps.
      shell: bash
      run: |
        echo "${{ toJSON(steps) }}"

    - name: Output runner.
      shell: bash
      run: |
        echo "${{ toJSON(runner) }}"

    - name: Output Matrix.
      shell: bash
      run: |
        echo "${{ toJSON(matrix) }}"

    - name: Output Matrix.
      shell: bash
      run: |
        echo "${{ toJSON(env) }}"
        


